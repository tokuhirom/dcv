services:
  # Redis cache
  redis:
    image: redis:8-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - backend  # Only on backend network

  # Docker in Docker for CI/CD simulation
  dind:
    image: docker:28-dind
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: ""
    volumes:
      - dind-storage:/var/lib/docker
      - ./dind-startup.sh:/startup.sh:ro
      - ./dind-entrypoint.sh:/entrypoint.sh:ro
    networks:
      - development  # On isolated development network
    entrypoint: ["/entrypoint.sh"]
    command: ["dockerd", "--host=unix:///var/run/docker.sock", "--host=tcp://0.0.0.0:2375"]

  # Verbose logger container that outputs messages periodically
  logger:
    image: alpine:latest
    command: |
      sh -c "
        counter=1
        while true; do
          echo \"[$(date '+%Y-%m-%d %H:%M:%S')] Logger message #$$counter: Hello from verbose container!\"
          echo \"[$(date '+%Y-%m-%d %H:%M:%S')] System info: $(uname -a)\"
          echo \"[$(date '+%Y-%m-%d %H:%M:%S')] Memory usage: $(free -h | grep Mem | awk '{print $$3 \"/\" $$2}')\"
          echo \"[$(date '+%Y-%m-%d %H:%M:%S')] Random data: $(head -c 32 /dev/urandom | base64)\"
          echo \"----------------------------------------\"
          counter=$$((counter + 1))
          sleep 2
        done
      "
    networks:
      - monitoring  # On monitoring network

  # Cache warmer service
  cache-warmer:
    image: alpine:latest
    command: |
      sh -c "
        while true; do
          echo \"[$(date '+%Y-%m-%d %H:%M:%S')] Warming cache...\"
          sleep 30
        done
      "
    networks:
      - backend  # Needs access to cache

volumes:
  postgres-data:
  redis-data:
  dind-storage:

networks:
  # Default bridge network for main services
  dcv-network:
    driver: bridge
    name: dcv-main-network
    ipam:
      config:
        - subnet: 172.24.0.0/16
          gateway: 172.24.0.1

  # Frontend network (web-facing services)
  frontend:
    driver: bridge
    name: dcv-frontend
    ipam:
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1

  # Backend network (database and cache)
  backend:
    driver: bridge
    name: dcv-backend
    ipam:
      config:
        - subnet: 172.26.0.0/16
          gateway: 172.26.0.1

  # Monitoring network (for future monitoring services)
  monitoring:
    driver: bridge
    name: dcv-monitoring
    ipam:
      config:
        - subnet: 172.27.0.0/16
          gateway: 172.27.0.1

  # Development network (for dind and testing)
  development:
    driver: bridge
    name: dcv-development
    internal: true  # This network has no external access
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
